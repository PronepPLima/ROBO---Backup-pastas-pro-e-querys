#03/10/2023
#@PLima
#ROBO - BACKUP PASTA C:
import pyautogui
import datetime
import time
import sys

#para sair da automacao colocando o mouse no topo a esquerda da janela
pyautogui.FAILSAFE = False

def pausa(tempo):
    print("time de:" , tempo)
    time.sleep(tempo)
    
def fim():
    pausa(1)
    print("Backup finalizado com sucesso!")
    pyautogui.alert("     Backup finalizado com sucesso!     ")
    sys.exit()

def botao_Apps():
    #botao para habilitar as opções
    print("botao para habilitar as opções;")
    pyautogui.hotkey("apps")
    pausa(1)
    #posicao do 7 zip
    pyautogui.hotkey("7")
    #4x down:
    print("4x teclado down;")
    pyautogui.hotkey("down")
    pyautogui.hotkey("down")
    pyautogui.hotkey("down")
    pyautogui.hotkey("down")
    pausa(1)
    print("Enter;")
    pyautogui.hotkey("enter")
    pausa(5)
    
def backup_Projetos():
    print("***Função Backup Projetos***")
    print("Tecla windows + R;")
    pyautogui.hotkey("win" , "r")
    pausa(1)
    print("Inserindo: C:\Pietro")
    pyautogui.write("C:\Pietro")
    pausa(1)
    print("Enter;")
    pyautogui.hotkey("enter")
    pausa(1)
    print("click na pasta;")
    pyautogui.click(975 , 531)
    pyautogui.write("Projetos")
    botao_Apps()
    #selecionando arquivo zip recem criado
    print("selecionando arquivo zip recem criado")
    pyautogui.write("Projetos.zip")
    pausa(1)
    pyautogui.hotkey("f2")
    pausa(1)
    print("Registrando momento atual;")
    agora = datetime.datetime.now()    
    print("Agora: " , str(agora))    
    renomear = "Projetos_" + agora.strftime("%d/%m/%Y-%H:%M:%S")
    print("Renomear: " , renomear)
    pyautogui.write(renomear)
    pausa(2)
    print("enter")
    pyautogui.hotkey("enter")
    pausa(1)
    print("ctrl + c;")
    pyautogui.hotkey("ctrl" , "x")
    pausa(1)
    print("Fechando explorer;")
    pyautogui.hotkey("Alt" , "f4")
    pausa(1)        
    print("Tecla windows + R;")
    pyautogui.hotkey("win" , "r")
    pausa(1)
    print("Inserindo: C:\Pietro\OneDrive - PRONEP\Backup")
    pyautogui.write("C:\Pietro\OneDrive - PRONEP\Backup")
    pausa(1)
    print("Enter;")
    pyautogui.hotkey("enter")
    pausa(2)
    print("click na pasta;")
    pyautogui.click(526,522)
    pausa(2)
    print("ctrl + v;")
    pyautogui.hotkey("ctrl" , "v")
    pausa(5)
    print("Fechando explorer;")
    pyautogui.hotkey("Alt" , "f4")
     

def backup_MV_QUERYs():
    pausa(2)
    print("win + r")
    pyautogui.hotkey("win" , "r")
    pausa(1)
    print("backspace")
    pyautogui.hotkey("backspace")
    pausa(1)
    print("C:\Pietro\OneDrive - PRONEP")
    pyautogui.write("C:\Pietro\OneDrive - PRONEP")
    pausa(1)
    print("enter")
    pyautogui.hotkey("enter")
    pausa(1)
    print("16. Homologação")
    pyautogui.write("16. Homologação ")
    pausa(2)
    print("enter")
    pyautogui.hotkey("enter")
    pausa(1)
    print("MV QUERY")
    pyautogui.write("MV QUERY")
    pausa(1)
    botao_Apps()
    pausa(1)
    #selecionando arquivo zip recem criado
    print("selecionando arquivo zip recem criado")
    pyautogui.write("MV QUERYs.zip")
    pausa(1)
    print("f2")
    pyautogui.hotkey("f2")
    pausa(1)
    print("Registrando momento atual;")
    agora = datetime.datetime.now()    
    print("Agora: " , str(agora))    
    renomear = "MV_QUERYs_" + agora.strftime("%d/%m/%Y-%H:%M:%S")
    print("Renomear: " , renomear)
    pyautogui.write(renomear)
    pausa(2)
    print("enter")
    pyautogui.hotkey("enter")
    pausa(1)
    print("ctrl + c;")
    pyautogui.hotkey("ctrl" , "x")
    pausa(1)
    print("Fechando explorer;")
    pyautogui.hotkey("Alt" , "f4")
    pausa(1)
    print("Tecla windows + R;")
    pyautogui.hotkey("win" , "r")
    pausa(1)
    print("Inserindo: C:\Pietro\OneDrive - PRONEP\Backup")
    pyautogui.write("C:\Pietro\OneDrive - PRONEP\Backup")
    pausa(1)
    print("Enter;")
    pyautogui.hotkey("enter")
    pausa(2)
    print("click na pasta;")
    pyautogui.click(526,522)
    pausa(2)
    print("ctrl + v;")
    pyautogui.hotkey("ctrl" , "v")
    pausa(5)
    print("Fechando explorer;")
    pyautogui.hotkey("Alt" , "f4")    
    
def backup_IW_QUERIES_HOME_CARE():
    pausa(2)
    print("win + r")
    pyautogui.hotkey("win" , "r")
    pausa(1)
    print("backspace;")
    pyautogui.hotkey("backspace")
    pausa(1)
    print("C:\Pietro\OneDrive - PRONEP")
    pyautogui.write("C:\Pietro\OneDrive - PRONEP")
    pausa(1)
    print("enter;")
    pyautogui.hotkey("enter")
    pausa(1)
    print("16. Homologação;")
    pyautogui.write("16. Homologação ")
    pausa(2)
    print("enter;")    
    pyautogui.hotkey("enter")
    pausa(1)
    print("IW QUERIES HOME_CARE;")
    pyautogui.write("IW QUERIES HOME_CARE")
    pausa(1)
    botao_Apps()
    pausa(1)
    #selecionando arquivo zip recem criado
    print("selecionando arquivo zip recem criado;")
    pyautogui.write("IW QUERIES HOME_CARE.zip")
    pausa(1)
    print("f2;")
    pyautogui.hotkey("f2")
    pausa(1)
    print("Registrando momento atual;")
    agora = datetime.datetime.now()    
    print("Agora: " , str(agora))    
    renomear = "IW_QUERIES_HOME_CARE_" + agora.strftime("%d/%m/%Y-%H:%M:%S")
    print("Renomear: " , renomear)
    pyautogui.write(renomear)
    pausa(2)
    print("enter;")
    pyautogui.hotkey("enter")
    pausa(1)
    print("ctrl + c;")
    pyautogui.hotkey("ctrl" , "x")
    pausa(1)
    print("Fechando explorer;")
    pyautogui.hotkey("Alt" , "f4")
    pausa(1)    
    print("Tecla windows + R;")
    pyautogui.hotkey("win" , "r")
    pausa(1)
    print("Inserindo: C:\Pietro\OneDrive - PRONEP\Backup")
    pyautogui.write("C:\Pietro\OneDrive - PRONEP\Backup")
    pausa(1)
    print("Enter;")
    pyautogui.hotkey("enter")
    pausa(2)
    print("click na pasta;")
    pyautogui.click(526,522)
    pausa(2)
    print("ctrl + v;")
    pyautogui.hotkey("ctrl" , "v")
    pausa(5)
    print("Fechando explorer;")
    pyautogui.hotkey("Alt" , "f4")


#==================================== INICIO ====================================
print("==================================== INICIO ====================================")
backup_Projetos()
backup_MV_QUERYs()
backup_IW_QUERIES_HOME_CARE()
print("==================================== FIM ====================================")
fim()
